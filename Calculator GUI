#Advaith Thakur
#ICS4U1

#Imports tkinter which is used to make the GUI
import tkinter as tk

#creates a window
root=tk.Tk()
#provides the shape and size of the calculator window
root.geometry("350x250")
#Names the window
root.title("Calculator")

#Makes the Text field and adjusts the height, width, and columnspan based on my instructions.
field=tk.Text(root, height=3, width=50)
field.grid(columnspan=5)

#Allows for the text field to contain what the user chooses.
field_text = ""

#Function to display chosen numbers and procedures in the text field.
def to_field(symbol):
  #field text is a global function.
  global field_text
  #The text in the text field will be a string.
  field_text=field_text+str(symbol)
  #Allows things in the field to be deleted.
  field.delete("1.0", "end")
  #allows things that we choose to be added into the text field.
  field.insert("1.0", field_text)

  #Function to evaluate the answers of the chosen procedures and numbers.
def calculate():
  #field text is a global function.
  global field_text
  #The result is evaluated using evaluate python features(eval).
  result=str(eval(field_text))
  #Allows things in the field to be deleted.
  field.delete("1.0", "end")
  #Allows the result to be inserted(displayed) in the text field.
  field.insert("1.0", result)

#Function to clear everything that was in the text field.
def clear():
  #field text is a global function.
  global field_text
  #Text field is empty.
  field_text=""
  #Allows things in the field to be deleted.
  field.delete("1.0", "end")

#The buttons are made containing the text(number), colour, and width. The buttons are organized in rows and columns. They are also assigned to the to_field fucntion to be displayed in the text field.
button = tk.Button(root, text="1", fg ="black", bg="light green", command=lambda: to_field(1), width=7)
button.grid(row=1, column=0)
button1 = tk.Button(root, text="2", fg ="black", bg="light green", command=lambda: to_field(2), width=7)
button1.grid(row=1, column=1)
button2 = tk.Button(root, text="3", fg ="black", bg="light green", command=lambda: to_field(3), width=7)
button2.grid(row=1, column=2)
button3 = tk.Button(root, text="4", fg ="black", bg="light green", command=lambda: to_field(4), width=7)
button3.grid(row=1, column=3)
button4 = tk.Button(root, text="5", fg ="black", bg="light green", command=lambda: to_field(5), width=7)
button4.grid(row=2, column=0)
button5 = tk.Button(root, text="6", fg ="black", bg="light green", command=lambda: to_field(6), width=7)
button5.grid(row=2, column=1)
button6 = tk.Button(root, text="7", fg ="black", bg="light green", command=lambda: to_field(7), width=7)
button6.grid(row=2, column=2)
button7 = tk.Button(root, text="8", fg ="black", bg="light green", command=lambda: to_field(8), width=7)
button7.grid(row=2, column=3)
button8 = tk.Button(root, text="9", fg ="black", bg="light green", command=lambda: to_field(9), width=7)
button8.grid(row=3, column=1)
button9 = tk.Button(root, text="0", fg ="black", bg="light green", command=lambda: to_field(0), width=7)
button9.grid(row=3, column=2)

#The Operaion buttons are made containing the text(Operation), colour, and width. The buttons are organized in rows and columns. They are also assigned to the to_field fucntion to be displayed in the text field.
buttonnegative = tk.Button(root, text="+/-", fg ="black", bg="light blue", command=lambda: to_field("*-1"), width=7)
buttonnegative.grid(row=3, column=0)
buttondot = tk.Button(root, text=".", fg ="black", bg="light blue", command=lambda: to_field("."), width=7)
buttondot.grid(row=3, column=3)
buttonnplus = tk.Button(root, text="+", fg ="black", bg="light blue", command=lambda: to_field("+"), width=7)
buttonnplus.grid(row=4, column=0)
buttonminus = tk.Button(root, text="-", fg ="black", bg="light blue", command=lambda: to_field("-"), width=7)
buttonminus.grid(row=4, column=1)
buttonmultiply = tk.Button(root, text="x", fg ="black", bg="light blue", command=lambda: to_field("*"), width=7)
buttonmultiply.grid(row=4, column=2)
buttondivide = tk.Button(root, text="/", fg ="black", bg="light blue", command=lambda: to_field("/"), width=7)
buttondivide.grid(row=4, column=3)
buttonleftb = tk.Button(root, text="(", fg ="black", bg="light blue", command=lambda: to_field("("), width=7)
buttonleftb.grid(row=5, column=0)
buttonrightb = tk.Button(root, text=")", fg ="black", bg="light blue", command=lambda: to_field(")"), width=7)
buttonrightb.grid(row=5, column=3)

#The buttons are made with containing the text(= and c), colour, and width. The buttons are organized in rows and columns. The clear button is assigned to the clear function in order to return the text field to the empty state. The equal button is assigned to the calculate function in ordere to provide the answer.
buttonc = tk.Button(root, text="C", fg ="black", bg="light blue", command=lambda: clear(), width=7)
buttonc.grid(row=5, column=1, columnspan=1)
buttonequal = tk.Button(root, text="=", fg ="black", bg="light blue", command=lambda: calculate(), width=7)
buttonequal.grid(row=5, column=2, columnspan=1)

#Loops the entire GUI so that the calculator can be used again.
root.mainloop()
